name: Build ARM64 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux-arm64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'pnpm'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install dependencies
        run: pnpm install
      - name: Set up cross-compilation
        run: |
          # Clean up any existing arm64 configuration
          sudo dpkg --remove-architecture arm64 || true
          sudo rm -f /etc/apt/sources.list.d/arm64.list || true

          # Add ARM64 architecture
          sudo dpkg --add-architecture arm64

          # Add ARM64 repository
          sudo tee /etc/apt/sources.list.d/arm64.list << EOF
          deb [arch=arm64] http://ports.ubuntu.com/ jammy main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main restricted universe multiverse
          EOF
          # Update apt to handle multiple architectures
          sudo dpkg --add-architecture arm64
          sudo sed -i 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo apt-get update
          # Install cross-compilation tools and ARM64 libraries
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt-get install -y crossbuild-essential-arm64
          sudo apt-get install -y libgtk-3-dev:arm64 libwebkit2gtk-4.0-dev:arm64 libayatana-appindicator3-dev:arm64 librsvg2-dev:arm64
          # Configure pkg-config for cross-compilation
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/usr" >> $GITHUB_ENV

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        with:
          tagName: v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: "--target aarch64-unknown-linux-gnu"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-artifacts
          path: |
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/appimage/*.AppImage
